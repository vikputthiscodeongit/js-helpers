function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"==typeof t?t:String(t)}function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}import"core-js/modules/es.promise.js";import"core-js/modules/es.symbol.description.js";import"core-js/modules/es.error.cause.js";import"core-js/modules/es.array.push.js";function asyncGeneratorStep(e,t,r,o,n,i,c){try{var u=e[i](c),s=u.value}catch(e){return void r(e)}u.done?t(s):Promise.resolve(s).then(o,n)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(o,n){var i=e.apply(t,r);function c(e){asyncGeneratorStep(i,o,n,c,u,"next",e)}function u(e){asyncGeneratorStep(i,o,n,c,u,"throw",e)}c(void 0)}))}}function fetchWithTimeout(e){return _fetchWithTimeout.apply(this,arguments)}function _fetchWithTimeout(){return(_fetchWithTimeout=_asyncToGenerator((function*(e){var{resource:t,fetchOptions:r,timeout:o=8e3}=e,n=new AbortController,i=setTimeout((()=>n.abort()),o),c=yield fetch(t,_objectSpread(_objectSpread({},r||{}),{},{signal:n.signal}));return clearTimeout(i),c}))).apply(this,arguments)}export{fetchWithTimeout as default};